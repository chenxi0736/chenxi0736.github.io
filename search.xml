<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSP-S 2021 第二轮 大金猪</title>
      <link href="/2021/10/23/csp-s2-2021/"/>
      <url>/2021/10/23/csp-s2-2021/</url>
      
        <content type="html"><![CDATA[<h3 id="地点"><a href="#地点" class="headerlink" title="地点"></a>地点</h3><p>考场在福州市第八中学</p><h3 id="时刻表"><a href="#时刻表" class="headerlink" title="时刻表"></a>时刻表</h3><p>福州一日游记</p><p>5:50起床<br>6:30出发<br>7:38动车出发<br>9:50到达福州站<br>10：30到达福州八中<br>11:00试机（看看键盘之类能不能用）<br>之后在福州八中逛了一圈<br>13:45候考<br>14：30开考（手机手表都不能带，没拍）<br>18:30结束<br>19:00到达福州站，准备回家<br>20:45登车<br>23:00到达漳州站<br>23:30到家</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 布尔类型学习（二）类型</title>
      <link href="/2021/09/30/c-plus-plus-study-2/"/>
      <url>/2021/09/30/c-plus-plus-study-2/</url>
      
        <content type="html"><![CDATA[<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>本文为本人的<code>C++</code>学习笔记，如有差错请留言。</p></div></div><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><p>在计算机的<strong>基本运算</strong>中，<strong>逻辑运算</strong>是很重要的一部分，所以<strong>C++<strong>（或者</strong>C语言</strong>的一部分）中的<strong>逻辑运算</strong>就显得格外重要。</p><p>什么是<strong>布尔</strong>？</p><p>在<strong>维基百科</strong>中的说法是：</p><blockquote><p><strong>布尔</strong>（英语：<strong>Boolean</strong>）是<strong>计算机科学</strong>中的<strong>逻辑数据类型</strong>，以发明<strong>布尔代数</strong>的数学家<strong>乔治·布尔</strong>为名。它是只有两种值的<strong>原始类型</strong>，通常是<strong>真</strong>和<strong>假</strong></p></blockquote><p>C语言并没有彻底从语法上支持“真”和“假”，只是用 0 和非 0 来代表。这点在 <strong>C++</strong> 中得到了改善，C++ 新增了 <strong>bool 类型（布尔类型）</strong>，它一般占用 1 个字节长度。bool 类型只有两个取值，true 和 false：true 表示“真”，false 表示“假”。</p><p>有以下<strong>例子</strong>（<strong>C语言</strong>）：（解释在注释里）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, flag;<span class="comment">// 定义三个变量</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b); <span class="comment">// 输入a,b</span></span><br><span class="line">    flag = a &gt; b;  <span class="comment">// 保存布尔运算结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag = %d\n&quot;</span>, flag); <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 结束程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入 6 69</span></span><br><span class="line"><span class="comment">// 输出 flag = 1</span></span><br></pre></td></tr></table></figure><p><strong>C语言</strong>中确实没有布尔类型，而在**C++**中有。</p><p><strong>bool</strong> 和 <strong>int</strong> <strong>double</strong> <strong>float</strong> <strong>char</strong> 一样，是<strong>类型名称</strong>，也是<strong>C++<strong>中的</strong>关键字</strong>。</p><p>在<strong>C++<strong>中，可以这么定义</strong>布尔变量</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">bool</span> flag;  <span class="comment">// 定义布尔变量</span></span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b; <span class="comment">// 输入 a,b</span></span><br><span class="line">    flag = a &gt; b; <span class="comment">// 对于布尔变量flag进行赋值</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;flag = &quot;</span>&lt;&lt;flag&lt;&lt;endl; <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 结束程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以使用 <strong>true</strong> 或者 <strong>false</strong> 进行<strong>赋值</strong>。</p><p>例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>特别注意:</p><p><strong>C++<strong>输出</strong>布尔类型</strong>的<strong>值</strong>时只会输出 <strong>“0”</strong> 或者 **”1”**。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-S 2021 第一轮 大金猪</title>
      <link href="/2021/09/19/csp-s1-2021/"/>
      <url>/2021/09/19/csp-s1-2021/</url>
      
        <content type="html"><![CDATA[<h3 id="CSP-J"><a href="#CSP-J" class="headerlink" title="CSP-J"></a>CSP-J</h3><p>福建的CSP-J组的第一轮竞赛取消了，50RMB不知道能不能退，<del>（按照CCF的风格，这应该是不可能的）</del></p><h3 id="CSP-S"><a href="#CSP-S" class="headerlink" title="CSP-S"></a>CSP-S</h3><p>让人高兴的是，S组的第一轮在线上举行，线上考试。</p><p>电脑一个摄像头和手机摄像头都进入腾讯会议。（双机位考试）</p><p>考试时间两个小时。（有点长）</p><p>电脑还要录屏。（使用的是EV录屏）</p><p>结果CCF认可了福建的第一轮成绩，可喜可贺。</p><p>9月27日，FCS（福建计算机学会）公示了第一轮的认证成绩。</p><p>通知，基本上所有的人都可以进入下一轮（缺考除外）。</p><p>在2021年10月23日会举行第二轮的比赛。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言的第二次学习</title>
      <link href="/2021/09/02/golang-study-2/"/>
      <url>/2021/09/02/golang-study-2/</url>
      
        <content type="html"><![CDATA[<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>本文为本人的<code>Go语言</code>学习笔记，如有差错请留言。</p></div></div><h3 id="Go语言的基本语法"><a href="#Go语言的基本语法" class="headerlink" title="Go语言的基本语法"></a>Go语言的基本语法</h3><p>一个<strong>Go 程序</strong>可以由多个<strong>标记</strong>组成，可以是<strong>关键字</strong>，<strong>标识符</strong>，<strong>常量</strong>，<strong>字符串</strong>，<strong>符号</strong>。</p><p>在<strong>Go语言</strong>中，一行是一次指令（一行代表一个语句的结束），而不是像<strong>C语言</strong>家族中的必须以<strong>分号</strong>结尾。</p><p>例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="string">&quot;This is chenxi&#x27;s blog&quot;</span>)</span><br></pre></td></tr></table></figure><p>注释与<strong>C语言家族</strong>的<strong>用法</strong>一样，在这里不在赘述。</p><p><strong>标识符</strong>也十分相同：</p><p><strong>标识符</strong>用来命名<strong>变量</strong>、<strong>类型</strong>等程序实体。一个<strong>标识符</strong>实际上就是一个或是多个<strong>字母</strong>(A<del>Z和a</del>z)<strong>数字</strong>(0~9)、<strong>下划线</strong>_组成的序列，但是第一个字符必须是<strong>字母</strong>或<strong>下划线</strong>而不能是数字。</p><p>注意：<strong>标识符</strong>的<strong>名称</strong>不能与<strong>关键字</strong>相同（编程语言都是这么个规则）。</p><p>这里有25个<strong>标识符</strong>（<strong>参考</strong>，有可能会用到）：</p><table><thead><tr><th>break</th><th>default</th><th>func</th><th>interface</th><th>select</th></tr></thead><tbody><tr><td>case</td><td>defer</td><td>go</td><td>map</td><td>struct</td></tr><tr><td>chan</td><td>else</td><td>goto</td><td>package</td><td>switch</td></tr><tr><td>const</td><td>fallthrough</td><td>if</td><td>range</td><td>type</td></tr><tr><td>continue</td><td>for</td><td>import</td><td>return</td><td>var</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言的初步学习</title>
      <link href="/2021/08/30/golang-study-1/"/>
      <url>/2021/08/30/golang-study-1/</url>
      
        <content type="html"><![CDATA[<h3 id="第一份代码"><a href="#第一份代码" class="headerlink" title="第一份代码"></a>第一份代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写程序的开始就是会：<em><strong>HelloWorld</strong></em></p><h3 id="语言特点"><a href="#语言特点" class="headerlink" title="语言特点"></a>语言特点</h3><ol><li><p>简洁、快速、安全</p></li><li><p>并行、有趣、开源</p></li><li><p>内存管理、数组安全、编译迅速</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ STL编程学习（一）容器</title>
      <link href="/2021/08/30/c-plus-plus-stl-study-1/"/>
      <url>/2021/08/30/c-plus-plus-stl-study-1/</url>
      
        <content type="html"><![CDATA[<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>本文为本人的<code>C++</code>学习笔记，如有差错请留言。</p></div></div><p>没有<strong>STL</strong>，我们的<strong>数据结构</strong>要不断的去重复实现。</p><p>我们一直在不断地重复实现一些诸如<strong>链表</strong>或<strong>集合</strong>或者等等这些常见的<strong>数据结构</strong>，这些代码使用起来往往都十分类似，只是为了适应不同数据的变化，可能需要在一些细节上做不同的处理。</p><p>简单的理解：</p><p>模板类的<strong>集合</strong>，<strong>容器</strong>内是<strong>封装</strong>的方法。</p><table><thead><tr><th>容器种类</th><th align="center">功能</th></tr></thead><tbody><tr><td>序列容器</td><td align="center">主要包括 <strong>vector</strong> 向量容器、<strong>list</strong> 列表容器以及 <strong>deque</strong> 双端队列容器。之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，即容器不是排序的。将元素插入容器时，指定在什么位置，元素就会位于什么位置。</td></tr><tr><td>排序容器</td><td align="center">包括 <strong>set</strong> 集合容器、<strong>multiset</strong>多重集合容器、<strong>map</strong>映射容器以及 <strong>multimap</strong> 多重映射容器。排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素也会插入到适当位置。所以关联容器在查找时具有非常好的性能。</td></tr><tr><td>哈希容器</td><td align="center">C++ 11 新加入 4 种关联式容器，分别是 <strong>unordered_set</strong> 哈希集合、<strong>unordered_multiset</strong> 哈希多重集合、<strong>unordered_map</strong> 哈希映射以及 <strong>unordered_multimap</strong> 哈希多重映射。和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新手教程（一）</title>
      <link href="/2021/08/30/hexo-website-step-1/"/>
      <url>/2021/08/30/hexo-website-step-1/</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h3><p>它是一款基于<strong>Node.js</strong>的静态博客框架，依赖少，并且易于安装使用，可以方便的生成静态网页托管在<strong>GitHub</strong>和<strong>Gitee</strong>上，是搭建博客的首选框架。</p><p><strong>Hexo</strong>的中文官网是:<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>本文主要讨论<strong>Hexo</strong>的初级搭建。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>在<strong>Git</strong><a href="https://git-scm.com/downloads">官网</a>上下载<strong>Windows</strong>的程序，按照步骤，安装就可以了。</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>Linux (Ubuntu, Debian)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><p>Linux (Fedora, Red Hat, CentOS)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git-core</span><br></pre></td></tr></table></figure><h4 id="检查安装是否到位"><a href="#检查安装是否到位" class="headerlink" title="检查安装是否到位"></a>检查安装是否到位</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><p><a href="http://nodejs.cn/">官网</a>下载</p><p>按照步骤安装</p><h4 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>检验</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="正式安装Hexo"><a href="#正式安装Hexo" class="headerlink" title="正式安装Hexo"></a>正式安装Hexo</h3><p>上面都是环境的配置，下面就是<strong>Hexo</strong>安装的部分内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>检验</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>然后新建一个文件夹，</p><p>在<strong>cmd</strong>或者<strong>Git bash</strong>中<code>cd</code>进去。</p><p>例如文件名为<code>blog</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>安装<strong>依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>至此，<strong>Hexo</strong>安装完毕。</p><h3 id="Hexo预览"><a href="#Hexo预览" class="headerlink" title="Hexo预览"></a>Hexo预览</h3><p>在<code>blog</code>文件夹里输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g&amp;&amp;hexo s</span><br></pre></td></tr></table></figure><p>这个意思就是生成<strong>静态网站文件，打开本地服务器</strong>。</p><p>浏览器输入<a href="">localhost:4000</a>就可以看到你生成的博客了。</p><p>使用<strong>ctrl+c</strong>可以把服务关掉。</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>这是<strong>Hexo</strong>建设的教程（一），接下来可以看看（二）。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chen Xi&#39;s Blog成立</title>
      <link href="/2021/08/29/start-website/"/>
      <url>/2021/08/29/start-website/</url>
      
        <content type="html"><![CDATA[<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>本文是<code>Chen Xi&#39;s Blog</code>的建站的官方公告。</p></div></div><h3 id="欢迎"><a href="#欢迎" class="headerlink" title="欢迎"></a>欢迎</h3><p>大家好，欢迎来到<a href="https://chenxi.host/">Chen Xi’s Blog</a>。</p><p>我前几天注册了<strong>chenxi.host</strong>域名。准备建立这个网站。</p><h3 id="网站运行环境（2022年1月24日更新）"><a href="#网站运行环境（2022年1月24日更新）" class="headerlink" title="网站运行环境（2022年1月24日更新）"></a>网站运行环境（2022年1月24日更新）</h3><p>网站的<strong>运行环境</strong>:</p><p><strong>2022年1月24日之前</strong>网站托管在<strong>Coding</strong>平台的<strong>静态网站</strong>服务，使用的是<strong>腾讯云</strong>注册的<strong>域名</strong>，运行的是<strong>Hexo静态网站生成器</strong>部署的<strong>静态网页</strong>，<strong>SSL</strong>证书用的是<strong>TrustAsia TLS RSA</strong>。</p><p><strong>2022年1月24日起</strong>:由于<strong>Coding</strong>平台的<strong>静态网站</strong>服务被转移到<strong>腾讯云</strong>的<strong>Severless</strong>服务上，并要求<strong>备案</strong>限制所以现在网站的<strong>运行环境</strong>为:</p><ol><li><strong>Vercel</strong>平台的<strong>静态网站</strong>服务</li><li><strong>腾讯云</strong>注册的<strong>域名</strong></li><li><strong>Hexo静态网站生成器</strong>部署的<strong>静态网页</strong></li><li><strong>Vercel</strong>平台提供的<strong>SSL</strong>证书</li></ol><h3 id="关于网站的内容"><a href="#关于网站的内容" class="headerlink" title="关于网站的内容"></a>关于网站的内容</h3><p>网站的内容主要是有关于<strong>信息技术</strong>，包括<strong>信息学奥赛</strong>(CSP-JS/NOIP)、<strong>网络技术</strong>、<strong>网络安全技术</strong>、<strong>网站开发</strong>、<strong>前端开发</strong>、<strong>后端开发</strong>、<strong>逆向工程</strong>等内容。</p><h3 id="网站的宗旨"><a href="#网站的宗旨" class="headerlink" title="网站的宗旨"></a>网站的宗旨</h3><blockquote><p><em><strong>You can enjoy a grander sight,By climbing to a greater height.</strong></em></p><p>-许渊冲译<strong>欲穷千里目，更上一层楼</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站公告 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
